import datetime
from enum import Enum
from typing import Generic, Iterable, List, Optional, Type, TypeVar

from htmlgen.element import Element

_E = TypeVar("_E", bound=Enum)

class html_attribute:
    def __init__(
        self, attribute_name: str, default: Optional[str] = ...
    ) -> None: ...
    def __get__(
        self, obj: Element, type: Optional[type] = ...
    ) -> Optional[str]: ...
    def __set__(self, obj: Element, value: Optional[str]) -> None: ...

class boolean_html_attribute:
    def __init__(self, attribute_name: str) -> None: ...
    def __get__(self, obj: Element, type_: Optional[type] = ...) -> bool: ...
    def __set__(self, obj: Element, value: bool) -> None: ...

class int_html_attribute:
    def __init__(
        self, attribute_name: str, default: Optional[int] = ...
    ) -> None: ...
    def __get__(
        self, obj: Element, type_: Optional[type] = ...
    ) -> Optional[int]: ...
    def __set__(self, obj: Element, value: Optional[int]) -> None: ...

class float_html_attribute:
    def __init__(
        self, attribute_name: str, default: Optional[float] = ...
    ) -> None: ...
    def __get__(
        self, obj: Element, type_: Optional[type] = ...
    ) -> Optional[float]: ...
    def __set__(self, obj: Element, value: Optional[float]) -> None: ...

class time_html_attribute:
    def __init__(
        self, attribute_name: str, default: Optional[datetime.time] = None
    ) -> None: ...
    def __get__(
        self, obj: Element, type_: Optional[type] = ...
    ) -> Optional[datetime.time]: ...
    def __set__(
        self, obj: Element, value: Optional[datetime.time]
    ) -> None: ...

class list_html_attribute:
    def __init__(self, attribute_name: str) -> None: ...
    def __get__(
        self, obj: Element, type_: Optional[type] = ...
    ) -> List[str]: ...
    def __set__(self, obj: Element, value: Iterable[str]) -> None: ...

class data_attribute(html_attribute):
    def __init__(
        self, data_name: str, default: Optional[str] = None
    ) -> None: ...

class css_class_attribute:
    def __init__(self, css_class: str) -> None: ...
    def __get__(self, obj: Element, type_: Optional[type] = ...) -> bool: ...
    def __set__(self, obj: Element, value: bool) -> None: ...

class enum_attribute(Generic[_E]):
    def __init__(
        self, attribute_name: str, enum: Type[_E], default: Optional[_E] = ...
    ) -> None: ...
    def __get__(
        self, obj: Element, type: Optional[type] = ...
    ) -> Optional[_E]: ...
    def __set__(self, obj: Element, value: Optional[_E]) -> None: ...
